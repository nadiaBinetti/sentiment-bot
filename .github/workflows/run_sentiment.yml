name: Analisi Sentiment Giornaliera

on:
  schedule:
    # Esegue lo script ogni giorno alle 07:00 UTC (che corrispondono alle 09:00 CEST o 08:00 CET)
    # Puoi personalizzare il cron job come preferisci.
    # Formato CRON: minuto ora giorno_del_mese mese giorno_della_settimana
    # Vedi https://crontab.guru per aiuto con la sintassi cron
    - cron: '0 7 * * *'
  workflow_dispatch: # Permette di eseguire il workflow manualmente dalla tab "Actions" di GitHub

jobs:
  run-sentiment-analysis:
    runs-on: ubuntu-latest # Usa l'ultima versione di Ubuntu disponibile sui runner di GitHub

    steps:
    - name: Checkout del codice
      uses: actions/checkout@v4 # Azione per fare il checkout del tuo codice

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Specifica la versione di Python che usi (es. 3.8, 3.9, 3.10, 3.11)

    - name: Installazione dipendenze
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Esegui lo script di analisi
      run: python sentiment_bot3.py # SOSTITUISCI con il nome effettivo del tuo file .py
      env:
        # Mappa i tuoi GitHub Secrets alle variabili d'ambiente
        # Il nome a sinistra è quello che usi in os.environ.get()
        # Il nome a destra (dopo secrets.) è il nome del secret in GitHub
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }} # Assicurati che questi nomi corrispondano!
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        # Aggiungi qui altre variabili d'ambiente se necessario
